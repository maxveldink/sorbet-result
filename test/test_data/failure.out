test/test_data/failure.rb:14: Expected `Typed::Result[Integer, String]` but found `T.any(Typed::Success[Integer], Typed::Failure[Integer])` for method result type https://srb.help/7005
    14 |  end
          ^^^
  Expected `Typed::Result[Integer, String]` for result type of method `test_generic_initializer`:
    test/test_data/failure.rb:8:
     8 |  def test_generic_initializer(should_succeed)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  Got `T.any(Typed::Success[Integer], Typed::Failure[Integer])` originating from:
    test/test_data/failure.rb:10:
    10 |      Typed::Success.new(1)
              ^^^^^^^^^^^^^^^^^^^^^
    test/test_data/failure.rb:12:
    12 |      Typed::Failure.new(1)
              ^^^^^^^^^^^^^^^^^^^^^

test/test_data/failure.rb:26: Expected `Integer` but found `String("error")` for argument `error` https://srb.help/7002
    26 |    Typed::Failure[Integer].new("error")
                                        ^^^^^^^
  Expected `Integer` for argument `error` of method `Typed::Failure#initialize`:
    ./lib/typed/result.rb:162:
     162 |    sig { params(error: Error).void }
                           ^^^^^
  Got `String("error")` originating from:
    test/test_data/failure.rb:26:
    26 |    Typed::Failure[Integer].new("error")
                                        ^^^^^^^

test/test_data/failure.rb:33: Method `upcase` does not exist on `Integer` https://srb.help/7003
    33 |    success.payload_or(1).upcase
                                  ^^^^^^
  Got `Integer` originating from:
    test/test_data/failure.rb:33:
    33 |    success.payload_or(1).upcase
            ^^^^^^^^^^^^^^^^^^^^^
  Did you mean `phase`? Use `-a` to autocorrect
    test/test_data/failure.rb:33: Replace with `phase`
    33 |    success.payload_or(1).upcase
                                  ^^^^^^
    https://github.com/sorbet/sorbet/tree/fb09bed285d9bb073a4ab129e51d7fcbc8d8c548/rbi/core/integer.rbi#L957: Defined here
     957 |  def phase(); end
            ^^^^^^^^^^^
